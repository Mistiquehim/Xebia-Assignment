{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\negih\\\\Desktop\\\\Project\\\\XebiaStarWarAssignment\\\\star-war-app\\\\src\\\\containers\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as action from '../redux/actions';\nimport '../App.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.hideAlert = this.hideAlert.bind(this);\n    this.state = {\n      showAlert: false\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    let {\n      loginInfo\n    } = newProps;\n\n    if (loginInfo.success) {\n      this.props.history.push('/search');\n    } else if (!loginInfo.success && loginInfo.showAlert) {\n      this.setState({\n        showAlert: true,\n        alertText: loginInfo.alertText\n      });\n    }\n  }\n  /**\r\n   * function onChange\r\n   * @param {*} field \r\n   * @param {*} value \r\n   */\n\n\n  onChange(field, e) {\n    var userState = {};\n    userState[field] = e.target.value;\n    this.setState(userState);\n  }\n\n  hideAlert() {\n    this.setState({\n      showAlert: false\n    });\n  }\n\n  onSubmit(e) {\n    this.props.loginRequest(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-signin\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form-signin-heading\",\n          children: \"Login to Star Wars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"username\",\n          placeholder: \"Email Address\",\n          required: \"\",\n          autoFocus: \"\",\n          onChange: this.onChange.bind(this, 'username')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: \"\",\n          onChange: this.onChange.bind(this, 'password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-lg btn-primary btn-block\",\n          onClick: this.onSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), this.state.showAlert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        title: this.state.alertText,\n        onConfirm: this.hideAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 44\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = function (state) {\n  return {\n    loginInfo: state.login\n  };\n};\n\nexport default connect(mapStateToProps, action)(withRouter(Login));","map":{"version":3,"sources":["C:/Users/negih/Desktop/Project/XebiaStarWarAssignment/star-war-app/src/containers/Login.js"],"names":["React","Component","SweetAlert","withRouter","connect","action","Login","constructor","onSubmit","bind","hideAlert","state","showAlert","componentWillReceiveProps","newProps","loginInfo","success","props","history","push","setState","alertText","onChange","field","e","userState","target","value","loginRequest","render","mapStateToProps","login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as action from '../redux/actions'\r\nimport '../App.css';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.hideAlert = this.hideAlert.bind(this);\r\n        this.state = { showAlert: false };\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let { loginInfo } = newProps;\r\n        if (loginInfo.success) {\r\n            this.props.history.push('/search');\r\n        } else if (!loginInfo.success && loginInfo.showAlert) {\r\n            this.setState({ showAlert: true, alertText: loginInfo.alertText });\r\n        }\r\n    }\r\n    /**\r\n     * function onChange\r\n     * @param {*} field \r\n     * @param {*} value \r\n     */\r\n    onChange(field, e) {\r\n        var userState = {};\r\n        userState[field] = e.target.value;\r\n        this.setState(userState);\r\n    }\r\n\r\n    hideAlert() {\r\n        this.setState({ showAlert: false });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.props.loginRequest(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <form className=\"form-signin\">\r\n                    <h2 className=\"form-signin-heading\">Login to Star Wars</h2>\r\n                    <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Email Address\" required=\"\" autoFocus=\"\" onChange={this.onChange.bind(this, 'username')} />\r\n                    <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"\" onChange={this.onChange.bind(this, 'password')} />\r\n                    <button type=\"button\" className=\"btn btn-lg btn-primary btn-block\" onClick={this.onSubmit}>Login</button>\r\n                </form>\r\n                {\r\n                    this.state.showAlert ? <SweetAlert title={this.state.alertText} onConfirm={this.hideAlert} /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = function (state) {\r\n    return { loginInfo: state.login };\r\n}\r\n\r\nexport default connect(mapStateToProps, action)(withRouter(Login));"]},"metadata":{},"sourceType":"module"}