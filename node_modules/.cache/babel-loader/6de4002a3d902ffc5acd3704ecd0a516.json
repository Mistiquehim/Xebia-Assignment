{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\negih\\\\Desktop\\\\Project\\\\XebiaStarWarAssignment\\\\star-war-app\\\\src\\\\components\\\\PlanetList.js\";\nimport React from 'react';\nimport Planet from './Planet';\n\nconst PlanetList = ({\n  data,\n  handleClick\n}) => {\n  let populations = [];\n  data.map((data, index) => {\n    if (data.population !== 'unknown') {\n      populations.push(parseInt(data.population));\n    }\n  });\n  populations.sort(function (a, b) {\n    return a - b;\n  });\n  let min = parseInt(populations[0]);\n  let max = parseInt(populations[populations.length - 1]);\n  let range = max - min;\n  const planets = data.map((planet, i) => {\n    let percentage = 0;\n\n    if (planet.population !== 'unknown') {\n      let correctedStartValue = parseInt(planet.population) - min;\n      percentage = correctedStartValue * 100 / range;\n    }\n\n    planet.population_perc = percentage;\n    return /*#__PURE__*/_jsxDEV(Planet, {\n      id: planet.id,\n      info: planet,\n      handleClick: id => handleClick(planet)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  });\n  /* ##### the component's output ##### */\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: planets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PlanetList;\nexport default PlanetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanetList\");","map":{"version":3,"sources":["C:/Users/negih/Desktop/Project/XebiaStarWarAssignment/star-war-app/src/components/PlanetList.js"],"names":["React","Planet","PlanetList","data","handleClick","populations","map","index","population","push","parseInt","sort","a","b","min","max","length","range","planets","planet","i","percentage","correctedStartValue","population_perc","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AAEhBC,EAAAA;AAFgB,CAAD,KAGb;AAEF,MAAIC,WAAW,GAAG,EAAlB;AACAF,EAAAA,IAAI,CAACG,GAAL,CAAS,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACtB,QAAIJ,IAAI,CAACK,UAAL,KAAoB,SAAxB,EAAmC;AAC/BH,MAAAA,WAAW,CAACI,IAAZ,CAAiBC,QAAQ,CAACP,IAAI,CAACK,UAAN,CAAzB;AACH;AACJ,GAJD;AAKAH,EAAAA,WAAW,CAACM,IAAZ,CAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAc,GAAjD;AACA,MAAIC,GAAG,GAAGJ,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,CAAlB;AACA,MAAIU,GAAG,GAAGL,QAAQ,CAACL,WAAW,CAACA,WAAW,CAACW,MAAZ,GAAqB,CAAtB,CAAZ,CAAlB;AACA,MAAIC,KAAK,GAAGF,GAAG,GAAGD,GAAlB;AAEA,QAAMI,OAAO,GAAGf,IAAI,CACfG,GADW,CACP,CAACa,MAAD,EAASC,CAAT,KAAe;AAChB,QAAIC,UAAU,GAAG,CAAjB;;AACA,QAAIF,MAAM,CAACX,UAAP,KAAsB,SAA1B,EAAqC;AACjC,UAAIc,mBAAmB,GAAGZ,QAAQ,CAACS,MAAM,CAACX,UAAR,CAAR,GAA8BM,GAAxD;AACAO,MAAAA,UAAU,GAAIC,mBAAmB,GAAG,GAAvB,GAA8BL,KAA3C;AACH;;AACDE,IAAAA,MAAM,CAACI,eAAP,GAAyBF,UAAzB;AAEA,wBACI,QAAC,MAAD;AACI,MAAA,EAAE,EAAEF,MAAM,CAACK,EADf;AAGI,MAAA,IAAI,EAAEL,MAHV;AAII,MAAA,WAAW,EAAGK,EAAD,IAAQpB,WAAW,CAACe,MAAD;AAJpC,OAESC,CAFT;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAjBW,CAAhB;AAmBA;;AACA,sBACI;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzCD;;KAAMhB,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport Planet from './Planet'\r\n\r\nconst PlanetList = ({\r\n  data,\r\n    handleClick\r\n}) => {\r\n\r\n    let populations = [];\r\n    data.map((data, index) => {\r\n        if (data.population !== 'unknown') {\r\n            populations.push(parseInt(data.population));\r\n        }\r\n    });\r\n    populations.sort(function (a, b) { return a - b });\r\n    let min = parseInt(populations[0]);\r\n    let max = parseInt(populations[populations.length - 1]);\r\n    let range = max - min\r\n\r\n    const planets = data\r\n        .map((planet, i) => {\r\n            let percentage = 0;\r\n            if (planet.population !== 'unknown') {\r\n                let correctedStartValue = parseInt(planet.population) - min\r\n                percentage = (correctedStartValue * 100) / range\r\n            }\r\n            planet.population_perc = percentage;\r\n\r\n            return (\r\n                <Planet\r\n                    id={planet.id}\r\n                    key={i}\r\n                    info={planet}\r\n                    handleClick={(id) => handleClick(planet)}\r\n                />\r\n            )\r\n        })\r\n\r\n    /* ##### the component's output ##### */\r\n    return (\r\n        <ul>\r\n            {planets}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PlanetList;\r\n"]},"metadata":{},"sourceType":"module"}